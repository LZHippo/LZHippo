{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // SPDX-License-Identifier: MIT\
pragma solidity >= 0.6.12;\
\
\
import "./Context.sol";\
\
abstract contract Ownable is Context \{\
    address private _owner;\
\
    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\
\
    /**\
     * @dev Initializes the contract setting the deployer as the initial owner.\
     */\
    constructor () public\{\
        address msgSender = _msgSender();\
        _owner = msgSender;\
        emit OwnershipTransferred(address(0), msgSender);\
    \}\
\
    /**\
     * @dev Returns the address of the current owner.\
     */\
    function owner() public view virtual returns (address) \{\
        return _owner;\
    \}\
\
    /**\
     * @dev Throws if called by any account other than the owner.\
     */\
    modifier onlyOwner() \{\
        require(owner() == _msgSender(), "Ownable: caller is not the owner");\
        _;\
    \}\
\
    /**\
     * @dev Leaves the contract without owner. It will not be possible to call\
     * `onlyOwner` functions anymore. Can only be called by the current owner.\
     *\
     * NOTE: Renouncing ownership will leave the contract without an owner,\
     * thereby removing any functionality that is only available to the owner.\
     */\
    function renounceOwnership() public virtual onlyOwner \{\
        emit OwnershipTransferred(_owner, address(0));\
        _owner = address(0);\
    \}\
\
    /**\
     * @dev Transfers ownership of the contract to a new account (`newOwner`).\
     * Can only be called by the current owner.\
     */\
    function transferOwnership(address newOwner) public virtual onlyOwner \{\
        require(newOwner != address(0), "Ownable: new owner is the zero address");\
        emit OwnershipTransferred(_owner, newOwner);\
        _owner = newOwner;\
    \}\
\}}